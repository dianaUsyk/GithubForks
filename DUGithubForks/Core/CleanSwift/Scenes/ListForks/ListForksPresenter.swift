//
//  ListForksPresenter.swift
//  DUGithubForks
//
//  Created by Di on 30.11.2017.
//  Copyright (c) 2017 Di. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListForksPresentationLogic {
    func presentHeaderOnLoad(response: ListForks.RepoHeader.Response)
    func presentForks(response: ListForks.FetchForks.Response)
    func presentSelectedFork(response: ListForks.SelectFork.Response)
}

class ListForksPresenter: ListForksPresentationLogic {
    weak var viewController: ListForksDisplayLogic?

    // MARK: Presentation

    func presentHeaderOnLoad(response: ListForks.RepoHeader.Response) {
        let title = "\(response.repository.owner.login) / \(response.repository.name)"
        let details = ListForks.ForkDetails(title: title, avatarURL: response.repository.owner.avatarUrl)
        let viewModel = ListForks.RepoHeader.ViewModel(details: details)
        viewController?.displayHeader(viewModel: viewModel)
    }
    
    func presentForks(response: ListForks.FetchForks.Response) {
        
        guard nil == response.errorMessage else {
            return
        }
        let forks: [ListForks.Fork]  = (response.repository?.forks.nodes?.flatMap { $0 }.map { (node) in
            let details = ListForks.ForkDetails(title: "\(node.owner.login) / \(node.name)", avatarURL: node.owner.avatarUrl)
            return ListForks.Fork(details: details, totalCount: node.forks.totalCount, isSelectable: node.forks.totalCount > 0)
            })!
        
        let viewModel = ListForks.FetchForks.ViewModel(forks: forks)
        viewController?.displayForks(viewModel: viewModel)
    }
    
    func presentSelectedFork(response: ListForks.SelectFork.Response) {
        let viewModel = ListForks.SelectFork.ViewModel(repository: response.repository)
        viewController?.displaySelectedForkDetails(viewModel: viewModel)
    }
}
